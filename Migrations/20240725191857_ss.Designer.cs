// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using stocktakingApi.Models.Context;

#nullable disable

namespace stocktakingApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240725191857_ss")]
    partial class ss
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("stocktakingApi.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("StaffDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            StaffDescription = "George is the CEO of the enterprise.His office is S001",
                            StaffName = "George Soros",
                            StaffRole = "CEO"
                        },
                        new
                        {
                            StaffId = 2,
                            StaffDescription = "Annet is the procurement manager.She has served the business for more than 8 solid years. Her Office is S009",
                            StaffName = "Dorcus Samatha",
                            StaffRole = "Procurement Manager"
                        },
                        new
                        {
                            StaffId = 3,
                            StaffDescription = "Yusuf serves as the technical director and business advisor. He has served  the business for more than 6 years",
                            StaffName = "Yusuf Nviiri",
                            StaffRole = "Business Psychologist"
                        },
                        new
                        {
                            StaffId = 4,
                            StaffDescription = "A competent Electrical Engineer, Martin is married to Suzan and a father of 3 beautiful girls",
                            StaffName = "Martin Sanders",
                            StaffRole = "Maintainance manager"
                        },
                        new
                        {
                            StaffId = 5,
                            StaffDescription = "Barbra specializes in Product Quality.She has served the company for more than 24 years ",
                            StaffName = "Barbra Walters",
                            StaffRole = "Quality Supervisor"
                        });
                });

            modelBuilder.Entity("stocktakingApi.Models.StockItem", b =>
                {
                    b.Property<int>("StockItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockItemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<double>("StockAmount")
                        .HasColumnType("float");

                    b.HasKey("StockItemId");

                    b.ToTable("StockItems");

                    b.HasData(
                        new
                        {
                            StockItemId = 1,
                            Description = "LaserJet Printers D426S with portable print head ",
                            Name = "LaserJet Printers",
                            StaffId = 1,
                            StockAmount = 4.0
                        },
                        new
                        {
                            StockItemId = 2,
                            Description = "Lenovo T430 model 2023 s/n= 2638JK23893MOS",
                            Name = "Lenovo laptop",
                            StaffId = 4,
                            StockAmount = 87.0
                        },
                        new
                        {
                            StockItemId = 3,
                            Description = "Dell D39 model 2022 s/n = P537X3672",
                            Name = "Dell Laptop ",
                            StaffId = 1,
                            StockAmount = 27.0
                        },
                        new
                        {
                            StockItemId = 4,
                            Description = "Kyocera Printers with mini paper cabins s/n Up673Jd",
                            Name = "Kyocera Printers",
                            StaffId = 1,
                            StockAmount = 6.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
